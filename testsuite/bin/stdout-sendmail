#! /usr/bin/env python
"""A script to be used as a sendmail replacement during testing.

Instead of actually sending the email, we dump information about
the email on standard output.
"""

from __future__ import print_function

from email.parser import Parser
import os
import sys


def stdout_sendmail():
    email_str = sys.stdin.read()

    if "GIT_HOOKS_MINIMAL_EMAIL_DEBUG_TRACE" in os.environ:
        # This environment variable is set when the testcase
        # doesn't really care about the full contents of
        # the email. Just print a simple trace showing that
        # the email _is_ being sent, and that's it.

        e_msg = Parser().parsestr(email_str)
        subject = e_msg["Subject"]
        if "\n" in subject:
            # The email subject got split across multiple lines during
            # email formatting.  Restore it to a single-line subject.
            subject = "".join(subject.splitlines())
        sys.stdout.write("DEBUG: Sending email: {subject}...".format(subject=subject))

    else:
        sys.stdout.write("DEBUG: ")
        sys.stdout.write(email_str)
    sys.stdout.flush()


if __name__ == "__main__":
    stdout_sendmail()
