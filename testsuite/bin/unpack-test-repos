#! /usr/bin/env python
"""[...]/bin/unpack-test-repos

This script is expected to be called from a testcase directory,
and unpackes the archive expected to contain the git directories
used by the testcase.
"""
from __future__ import print_function

from os import unlink
from os.path import exists, isdir, isfile
from shutil import move
from subprocess import Popen, PIPE, STDOUT
from sys import exit, stderr


def fatal(msg):
    print("ERROR: %s." % msg, file=stderr)
    print("Aborting.", file=stderr)
    exit(1)


# The infrastructure assumes that the repositories are archives
# inside a tarball called git-repos.tar.gz.
REPOS_TARBALL = "git-repos.tar.bz2"

# The config file to be used in the bare repository...
BARE_REPO_CONFIG = "bare_repo_config"

if not exists(REPOS_TARBALL):
    fatal("Cannot find repositories' tarball: %s" % REPOS_TARBALL)

if not exists(BARE_REPO_CONFIG):
    fatal("Cannot find config file for bare repository: %s" % BARE_REPO_CONFIG)

p = Popen(["tar", "xvfj", REPOS_TARBALL], stdout=PIPE, stderr=STDOUT)
out, _ = p.communicate()
if p.returncode != 0:
    # The packing operation failed. Print an error message, and exit.
    print("ERROR: tar failed to unpack repositories:", file=stderr)
    print(out, file=stderr)
    exit(p.returncode)

if not isdir("repo"):
    fatal('Directory "repo" does not exist')
if not isdir("repo/.git"):
    fatal('Directory "repo" does not appear to be a git repository')
if not isdir("bare/repo.git"):
    fatal('Directory "bare/repo.git" does not exist')

# Determine the location of the bare/repo.git's config file.
# It depends on whether the repository is a bare repository or not.
if isdir("bare/repo.git/.git"):
    bare_repo_config_path = "bare/repo.git/.git/config"
else:
    bare_repo_config_path = "bare/repo.git/config"

# Move our config file in place, after having verified that we are not
# about to overwrite one.
if isfile(bare_repo_config_path):
    fatal("Unexpected config file in bare repository: %s" % bare_repo_config_path)
move(BARE_REPO_CONFIG, bare_repo_config_path)

unlink(REPOS_TARBALL)
